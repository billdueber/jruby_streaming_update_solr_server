= jruby_streaming_update_solr_server

Some syntactic sugar on top of the StreamingUpdateSolrServer as provided by the Apache
Solr project, along with its most common argument, the SolrInputDocument. 

Documentation can be generated with yard via the 'rake yard' action and available online at http://rdoc.info/projects/billdueber/jruby_streaming_update_solr_server 

See the class files for more information, documentation, and examples. 

== Quick example

    # @example Create and add a SolrInputDocument
    #   url = 'http://solrmachine:port/solr' # URL to solr
    #   queuesize = 10 # Size of producer cache 
    #   threads = 2 # Number of consumer threads to push docs from queue to solr
    #
    #   suss = StreamingUpdateSolrServer.new(url,queuesize,threads)
    #
    #   doc = SolrInputDocument.new
    #   doc << ['title', 'This is the title']
    #   doc << ['id', 1]
    #   suss.add doc  # or suss << doc
    #   # repeat as desired
    #   suss.commit
    #
    # @example Create and add as a hash
    #   # The "hash" just needs to be an object that responds to each_pair with field,value(s)
    #   suss = StreamingUpdateSolrServer.new(url,queuesize,threads)
    #   doc = {}
    #   doc['title'] = This is the title'
    #   doc[:id] = 1 # Can also take symbols instead of strings if you like
    #   doc[:author] = ['Bill', 'Mike']
    #   suss << doc
    #   # repeat as desired
    #   suss.commit


== What is this again?

For users of Solr, there is a java class called StreamingUpdateSolrServer that allows you to easily 
(and in a threaded manner) add documents (of class SolrInputDocument) 
to a queue and have them automatically sent along to Solr by a user-configurable number of threads.

These classes open up those Java classes to add some JRuby sugar and make it easy for you to
construct Solr documents and send them to Solr all from within the comfort of the JRuby environment. 

== WARNING: Program hangs on for 60 seconds!

*WARNING*: After your program ends, the StreamingUpdateSolrServer object hangs on for a full minute, presumably
the timeout of the underlying http client object. I haven't figure out how to change this yet.

== Copyright

Copyright (c) 2010 Bill Dueber. See LICENSE for details.
